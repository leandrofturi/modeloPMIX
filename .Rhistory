install.packages('shiny')
source('~/Downloads/volumeUtilCORRETO.R', echo=TRUE)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volume(0.5, T)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volume(0.5, T)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volume(0.5, T)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volume(0.5, T)
volume(0.5)
volume(0.5)
source('~/Downloads/volumeUtilCORRETO.R', echo=TRUE)
volume(0.5, T)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volume(0.5, T)
volume(0.5)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volume(0.5, T)
source('~/Dropbox/IC2018/modeloPMIX/volumeUtil.R', echo=TRUE)
volumeUtil(0.5, T)
source('~/Dropbox/IC2018/modeloPMIX/entrada.R', echo=TRUE)
entrada = function (dados) {
# ARQUIVO CONTENDO DUAS COLUNAS: UMA COM A DATA DA MEDICAO E OUTRA COM AS MEDICOES DE VAZAO MENSAIS
leitura = read.table (dados, header = TRUE, sep = ";", dec = ",")
leitura = leitura[, -1]
serieH = matrix (leitura, ncol = 12, byrow = TRUE)
serieAnualH = apply (serieH, 1, sum)
mediaH = apply (serieH, 2, mean)
dpH = apply (serieH, 2, sd)
nH = length (serieH) / 12
serieHL = log (serieH)
mediaHL = apply (serieHL, 2, mean)
dpHL = apply (serieHL, 2, sd)
# PADRONIZACAO
serieHN = t ((t (serieHL) - mediaHL) / dpHL)
# CALCULO DOS LAGS SIGNIFICATIVOS
lagANUAL = lagAnualSignificativo (serieAnualH)
lagMENSAL = lagMensalSignificativo (serieH)
facAnualH = autocorrelacaoAnual (serieAnualH, 12)
facMensalH = autocorrelacaoMensal (serieH, 12)
final = list (serieH = serieH, mediaH = mediaH, dpH = dpH, lagAnual = lagANUAL, lagMensal = lagMENSAL, facAnualH = facAnualH, facMensalH = facMensalH,
serieHN = serieHN, mediaHL = mediaHL, dpHL = dpHL)
return (final)
}
setwd("~/Dropbox/IC2018/modeloPMIX")
source('~/Dropbox/IC2018/modeloPMIX/entrada.R', echo=TRUE)
s = entrada(tk_choose.files())$serieH
S
s
source('~/Dropbox/IC2018/modeloPMIX/medidasEstatisticas.R', echo=TRUE)
Hurst(s)
source('~/Downloads/Funcoes_Leandro_ago2019.R', echo=TRUE)
Indice_Hurst<-function(serie){
N = length(serie)
soma_ac<-vector();
dif_media<-vector();
media_serie<-mean(serie);
sd_serie<-sd(serie);
dif_media[1]<-(serie[1]-media_serie[1])^2;
soma_ac[1]<-0;
for(i in 2:(N)){
soma_ac[i]<-soma_ac[i-1]+(serie[i]-media_serie);
dif_media[i]<-(serie[i]-media_serie)^2;
}
#dif_media;
soma_ac[N]<-0;
#soma_ac;
soma_dif_media<-sum(dif_media);
Range<-max(soma_ac)-min(soma_ac);
Desvio_D<-(N^(-0.5))*(soma_dif_media^0.5);
Range_escalonado<-Range/Desvio_D;
Hurst<-log(Range_escalonado)/(log((N)/2));
return(Hurst);
}#Para dados anuais, recebe uma coluna com as somas anuais
Indice_Hurst(s)
Indice_Hurst_Mensal<-function(serie){
vetor = 0
rownames(serie) = NULL
colnames(serie) = NULL
for(i in 1:length(serie[,1])){
if(i==1){
vetor = (serie[1,])
}
else{
vetor = cbind(vetor,(serie[i,]))
}
}
vetor = t(vetor)
return(Indice_Hurst(vetor))
}#Para dados mensais, Entrada Ã© um dataframe ano X mes
Indice_Hurst_Mensal(s)
Hurst(s)
source('~/Dropbox/IC2018/modeloPMIX/medidasEstatisticas.R', echo=TRUE)
Hurst(s)
